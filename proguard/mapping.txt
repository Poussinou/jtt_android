android.support.v4.app.NotificationCompat -> a.a.a.a.a:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Builder -> a.a.a.a.b:
    android.content.Context mContext -> a
    android.app.PendingIntent mContentIntent -> b
    java.util.ArrayList mActions -> c
    android.app.Notification mNotification -> d
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> a.a.a.a.c:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    float getXVelocity(android.view.VelocityTracker,int) -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
    void onPageSelected(int) -> b
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
    android.graphics.Bitmap get_bmp(android.content.Context,com.aragaer.jtt.core.Hour) -> a
    java.lang.String get_text(android.content.Context,com.aragaer.jtt.core.Hour) -> b
    int get_text_size$faab21a() -> a_
    void onStringResourcesChanged$13462e() -> b_
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> a.a.a.a.d:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> a.a.a.a.e:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> a.a.a.a.f:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> a.a.a.a.g:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompatJellybean -> a.a.a.a.h:
    android.app.Notification$Builder b -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> a.a.a.b.a:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl mCallbacks$1627266e -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> a.a.a.b.b:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl mCallbacks$1627266e -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.view.AccessibilityDelegateCompat -> a.a.a.c.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> a
    java.lang.Object DEFAULT_DELEGATE -> b
    java.lang.Object mBridge -> c
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> a.a.a.c.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> a.a.a.c.c:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> a.a.a.c.d:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> a.a.a.c.e:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> a.a.a.c.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> a.a.a.c.g:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> a.a.a.c.h:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
android.support.v4.view.KeyEventCompat -> a.a.a.c.i:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> a.a.a.c.j:
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> a.a.a.c.k:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> a.a.a.c.l:
    boolean metaStateHasModifiers$255f299(int) -> b
    boolean metaStateHasNoModifiers(int) -> c
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> a
android.support.v4.view.MotionEventCompat -> a.a.a.c.m:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL$549a0edc -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> a.a.a.c.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> a.a.a.c.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> a.a.a.c.p:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem$30510aeb() -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
android.support.v4.view.VelocityTrackerCompat -> a.a.a.c.q:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL$2b7feb12 -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> a.a.a.c.r:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> a.a.a.c.s:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> a.a.a.c.t:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> a.a.a.c.u:
android.support.v4.view.ViewCompat$GBViewCompatImpl -> a.a.a.c.v:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> a.a.a.c.w:
    long getFrameTime() -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> a.a.a.c.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> a.a.a.c.y:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> a.a.a.c.z:
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> a.a.a.c.aa:
android.support.v4.view.ViewCompat$ViewCompatImpl -> a.a.a.c.ab:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    long getFrameTime() -> a
android.support.v4.view.ViewConfigurationCompat -> a.a.a.c.ac:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL$2c1084be -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> a.a.a.c.ad:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> a.a.a.c.ae:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> a.a.a.c.af:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    float mFirstOffset -> o
    float mLastOffset -> p
    int mChildHeightMeasureSpec -> q
    boolean mInLayout -> r
    boolean mScrollingCacheEnabled -> s
    boolean mPopulatePending -> t
    int mOffscreenPageLimit -> u
    boolean mIsBeingDragged -> v
    boolean mIsUnableToDrag -> w
    int mDefaultGutterSize -> x
    int mGutterSize -> y
    int mTouchSlop -> z
    float mLastMotionX -> A
    float mLastMotionY -> B
    float mInitialMotionX -> C
    float mInitialMotionY -> D
    int mActivePointerId -> E
    android.view.VelocityTracker mVelocityTracker -> F
    int mMinimumVelocity -> G
    int mMaximumVelocity -> H
    int mFlingDistance -> I
    int mCloseEnough -> J
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> K
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> L
    boolean mFirstLayout -> M
    boolean mCalledSuper -> N
    int mDecorChildCount -> O
    android.support.v4.app.NotificationCompat$NotificationCompatImpl mOnPageChangeListener$4b8af522 -> P
    java.lang.Runnable mEndScrollRunnable -> Q
    int mScrollState -> R
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> c
    void setAdapter(android.support.v4.view.PagerAdapter) -> a
    int getClientWidth() -> d
    void setCurrentItem(int) -> a
    void setCurrentItem$2563266(int) -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener$7c5ced3(android.support.v4.app.NotificationCompat$NotificationCompatImpl) -> a
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> d
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> e
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled$134632() -> e
    void onPageScrolled$486775f1() -> f
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent$1385ff() -> g
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> f
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> j
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000$b020504(android.support.v4.view.ViewPager) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    int access$300(android.support.v4.view.ViewPager) -> c
    int[] access$400() -> c
android.support.v4.view.ViewPager$1 -> a.a.a.c.ag:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> a.a.a.c.ah:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> a.a.a.c.ai:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> a.a.a.c.aj:
android.support.v4.view.ViewPager$ItemInfo -> a.a.a.c.ak:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> a.a.a.c.al:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> a.a.a.c.am:
    android.support.v4.view.ViewPager this$0 -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$PagerObserver -> a.a.a.c.an:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> a.a.a.c.ao:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> a.a.a.c.ap:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> a.a.a.c.aq:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> a.a.a.c.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> a.a.a.c.a.b:
    void addAction(java.lang.Object,int) -> a
    int getActions(java.lang.Object) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getText(java.lang.Object) -> e
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isClickable(java.lang.Object) -> h
    boolean isEnabled(java.lang.Object) -> i
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isLongClickable(java.lang.Object) -> l
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    boolean isSelected(java.lang.Object) -> o
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> a.a.a.c.a.c:
    int getActions(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> f
    boolean isChecked(java.lang.Object) -> g
    boolean isFocusable(java.lang.Object) -> j
    boolean isFocused(java.lang.Object) -> k
    boolean isSelected(java.lang.Object) -> o
    boolean isClickable(java.lang.Object) -> h
    boolean isLongClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> i
    boolean isPassword(java.lang.Object) -> m
    boolean isScrollable(java.lang.Object) -> n
    void setScrollable(java.lang.Object,boolean) -> a
    java.lang.CharSequence getPackageName(java.lang.Object) -> d
    java.lang.CharSequence getClassName(java.lang.Object) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> e
    java.lang.CharSequence getContentDescription(java.lang.Object) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> a.a.a.c.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> a.a.a.c.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> p
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> a.a.a.c.a.f:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> a.a.a.c.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> b
    boolean performAction$5985f823() -> c
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> d
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus$f3a5639() -> e
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> a.a.a.c.a.h:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> a.a.a.c.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> a.a.a.c.a.j:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> a.a.a.c.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> a.a.a.c.a.l:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> a.a.a.c.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> a.a.a.c.a.n:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> a.a.a.c.a.o:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> a.a.a.c.a.p:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> a.a.a.c.a.q:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> a.a.a.c.a.r:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> a.a.a.c.a.s:
android.support.v4.widget.EdgeEffectCompat -> a.a.a.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL$33389a3f -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> a.a.a.d.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> a.a.a.d.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.aragaer.jtt.BootReceiver -> com.aragaer.jtt.BootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aragaer.jtt.ClockView -> com.aragaer.jtt.a:
    com.aragaer.jtt.resources.StringResources sr -> a
    android.widget.TextView text -> b
    com.aragaer.jtt.graphics.WadokeiView wadokei -> c
    com.aragaer.jtt.graphics.ArrowView arrow -> d
    com.aragaer.jtt.core.Hour hour -> e
    boolean vertical -> f
    void setHour(int) -> c
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onStringResourcesChanged$13462e() -> b_
com.aragaer.jtt.JTTMainActivity -> com.aragaer.jtt.JTTMainActivity:
    com.aragaer.jtt.ClockView clock -> a
    com.aragaer.jtt.today.TodayAdapter today -> b
    android.content.BroadcastReceiver receiver -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    com.aragaer.jtt.ClockView access$0(com.aragaer.jtt.JTTMainActivity) -> a
    com.aragaer.jtt.today.TodayAdapter access$1(com.aragaer.jtt.JTTMainActivity) -> b
com.aragaer.jtt.JTTMainActivity$1 -> com.aragaer.jtt.b:
    com.aragaer.jtt.JTTMainActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aragaer.jtt.JTTWidgetProvider -> com.aragaer.jtt.JTTWidgetProvider:
    java.util.Map classes -> a
    void draw_all(android.content.Context) -> a
    void draw(android.content.Context,int[],com.aragaer.jtt.JTTWidgetProvider$WidgetHolder) -> b
    java.util.Map access$0() -> a
    void access$1(android.content.Context,android.content.Intent,java.lang.Class) -> a
    void access$2(android.content.Context,int[],com.aragaer.jtt.JTTWidgetProvider$WidgetHolder) -> a
com.aragaer.jtt.JTTWidgetProvider$JTTWidget -> com.aragaer.jtt.c:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aragaer.jtt.JTTWidgetProvider$Widget1 -> com.aragaer.jtt.JTTWidgetProvider$Widget1:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aragaer.jtt.JTTWidgetProvider$Widget12 -> com.aragaer.jtt.JTTWidgetProvider$Widget12:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aragaer.jtt.JTTWidgetProvider$WidgetHolder -> com.aragaer.jtt.d:
    android.content.ComponentName cn -> a
    com.aragaer.jtt.core.Hour last_update -> b
    android.support.v4.app.NotificationCompat$NotificationCompatImpl painter$227b432b -> c
    int granularity -> d
com.aragaer.jtt.JttService -> com.aragaer.jtt.JttService:
    com.aragaer.jtt.JttStatus status_notify -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void toggle_notify(boolean) -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void move() -> a
com.aragaer.jtt.JttStatus -> com.aragaer.jtt.e:
    android.content.Context context -> a
    com.aragaer.jtt.resources.StringResources sr -> b
    com.aragaer.jtt.core.Hour h -> c
    long start -> d
    long end -> e
    android.app.NotificationManager nm -> f
    void release() -> c
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void show() -> d
    void onStringResourcesChanged$13462e() -> b_
com.aragaer.jtt.LocationPreference -> com.aragaer.jtt.LocationPreference:
    float accuracy -> a
    android.location.LocationManager lm -> b
    android.widget.TextView lat -> c
    android.widget.TextView lon -> d
    android.widget.LinearLayout locView -> e
    java.lang.String latlon -> f
    android.view.View onCreateDialogView() -> onCreateDialogView
    void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    void onClick(android.content.DialogInterface,int) -> onClick
    void showDialog(android.os.Bundle) -> showDialog
    void doSet(java.lang.String) -> a
    void makeUseOfNewLocation(android.location.Location,boolean) -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void access$0(com.aragaer.jtt.LocationPreference) -> a
com.aragaer.jtt.LocationPreference$1 -> com.aragaer.jtt.f:
    com.aragaer.jtt.LocationPreference this$0 -> a
    void onClick(android.view.View) -> onClick
com.aragaer.jtt.LocationPreference$InputFilterMinMax -> com.aragaer.jtt.g:
    float min -> a
    float max -> b
    java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int) -> filter
com.aragaer.jtt.R$styleable -> com.aragaer.jtt.h:
    int[] Wadokei -> a
    int[] Widget -> b
com.aragaer.jtt.Settings -> com.aragaer.jtt.Settings:
    java.lang.String[] prefcodes -> a
    java.util.Map listeners -> b
    int[] app_themes -> c
    int[] widget_themes -> d
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    void onCreate(android.os.Bundle) -> onCreate
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    float[] getLocation(android.content.Context) -> a
    int getAppTheme(android.content.Context) -> b
    int getWidgetTheme(android.content.Context) -> c
    void onStart() -> onStart
com.aragaer.jtt.ViewPagerAdapter -> com.aragaer.jtt.i:
    java.util.ArrayList views -> b
    android.support.v4.view.ViewPager pager -> c
    android.widget.RadioGroup tablist -> d
    android.app.Activity context -> e
    int getCount() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void addView(android.view.View,int) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void onPageSelected(int) -> b
com.aragaer.jtt.WidgetPainter1 -> com.aragaer.jtt.j:
    android.graphics.Bitmap get_bmp(android.content.Context,com.aragaer.jtt.core.Hour) -> a
    java.lang.String get_text(android.content.Context,com.aragaer.jtt.core.Hour) -> b
    int get_text_size$faab21a() -> a_
com.aragaer.jtt.WidgetPainter12 -> com.aragaer.jtt.k:
    android.graphics.Bitmap get_bmp(android.content.Context,com.aragaer.jtt.core.Hour) -> a
    java.lang.String get_text(android.content.Context,com.aragaer.jtt.core.Hour) -> b
    int get_text_size$faab21a() -> a_
com.aragaer.jtt.core.Calculator -> com.aragaer.jtt.core.Calculator:
    android.net.Uri TRANSITIONS -> b
    android.net.Uri LOCATION -> a
    java.util.Map cache -> c
    android.content.UriMatcher matcher -> d
    com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator calculator -> e
    java.lang.String[] PROJECTION_TR -> f
    long ms_per_day -> g
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    boolean getSurroundingTransitions(android.content.Context,long,long[]) -> a
    long[] getTrForJDN(long) -> a
com.aragaer.jtt.core.Clockwork -> com.aragaer.jtt.core.Clockwork:
    android.content.Intent TickAction -> a
    com.aragaer.jtt.core.Hour hour -> b
    void schedule(android.content.Context) -> a
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.aragaer.jtt.core.Clockwork$TimeChangeReceiver -> com.aragaer.jtt.core.Clockwork$TimeChangeReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aragaer.jtt.core.Hour -> com.aragaer.jtt.core.a:
    java.lang.String[] Glyphs -> a
    int num -> b
    int quarter -> c
    int quarter_parts -> d
    int wrapped -> e
    void setTo(int,int,int) -> a
    com.aragaer.jtt.core.Hour fromTimestamps(long[],boolean,long,com.aragaer.jtt.core.Hour) -> a
    com.aragaer.jtt.core.Hour fromWrapped(int,com.aragaer.jtt.core.Hour) -> a
    boolean compareAndUpdate(int,int) -> a
    int lowerBoundary(int) -> a
    int upperBoundary(int) -> b
    long getHourBoundary(long,long,int) -> a
com.aragaer.jtt.graphics.ArrowView -> com.aragaer.jtt.a.a:
    com.aragaer.jtt.graphics.Paints paints -> a
    android.graphics.Path path -> b
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
com.aragaer.jtt.graphics.Paints -> com.aragaer.jtt.a.b:
    android.graphics.Paint glyph_stroke -> a
    android.graphics.Paint wadokei_stroke -> b
    android.graphics.Paint day_fill -> c
    android.graphics.Paint glyph_fill -> d
    android.graphics.Paint night_fill -> e
    android.graphics.Paint wadokei_fill -> f
com.aragaer.jtt.graphics.WadokeiDraw -> com.aragaer.jtt.a.c:
    android.graphics.Paint cache_paint -> a
    android.graphics.Matrix matrix -> b
    com.aragaer.jtt.graphics.Paints paints -> c
    android.graphics.Bitmap clock -> d
    android.graphics.Bitmap sun_stages -> e
    android.graphics.Bitmap glyphs -> f
    int unit -> g
    int arc_start -> h
    int arc_end -> i
    int arc_len -> j
    void setUnit(int) -> a
    void prepare_dial() -> b
    void prepare_glyphs(int) -> b
    void draw_dial(com.aragaer.jtt.core.Hour,android.graphics.Canvas) -> a
    void release() -> a
com.aragaer.jtt.graphics.WadokeiView -> com.aragaer.jtt.a.d:
    com.aragaer.jtt.graphics.WadokeiDraw wd -> a
    com.aragaer.jtt.core.Hour hour -> b
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
com.aragaer.jtt.resources.RuntimeResources -> com.aragaer.jtt.b.a:
    android.content.Context context -> a
    java.util.Map rr_singletons -> b
    java.util.Map singletons -> c
    com.aragaer.jtt.resources.RuntimeResources get(android.content.Context) -> a
    java.lang.Object getInstance(java.lang.Class) -> a
com.aragaer.jtt.resources.StringResources -> com.aragaer.jtt.b.b:
    int change_pending -> a
    android.content.BroadcastReceiver TZChangeReceiver -> b
    android.content.IntentFilter filter -> c
    android.content.Context c -> d
    android.content.res.Resources r -> e
    java.lang.String[] Hours -> f
    java.lang.String[] HrOf -> g
    java.lang.String[] Quarters -> h
    java.text.DateFormat df -> i
    int hour_name_option -> j
    java.util.Map listeners -> k
    int[] hnh -> l
    int[] hnhof -> m
    int[] q -> n
    void setLocaleToResources(java.lang.String,android.content.res.Resources) -> a
    void setLocaleToContext(android.content.Context) -> a
    void setLocale(java.lang.String) -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    java.lang.String getHour(int) -> a
    java.lang.String getHrOf(int) -> b
    java.lang.String getQuarter(int) -> c
    void registerStringResourceChangeListener$4a7ec539(android.support.v4.app.NotificationCompat$NotificationCompatImpl,int) -> a
    void unregisterStringResourceChangeListener$2f252fbc(android.support.v4.app.NotificationCompat$NotificationCompatImpl) -> a
    void notifyChange() -> a
    void load_hour_names() -> b
    java.lang.String format_time(long) -> a
    android.content.Context access$0(com.aragaer.jtt.resources.StringResources) -> a
    void access$1(com.aragaer.jtt.resources.StringResources,java.text.DateFormat) -> a
    int access$2(com.aragaer.jtt.resources.StringResources) -> b
    void access$3(com.aragaer.jtt.resources.StringResources,int) -> a
    void access$4(com.aragaer.jtt.resources.StringResources) -> c
com.aragaer.jtt.resources.StringResources$1 -> com.aragaer.jtt.b.c:
    com.aragaer.jtt.resources.StringResources this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.aragaer.jtt.today.BoundaryItem -> com.aragaer.jtt.c.a:
    android.view.View toView(android.content.Context,android.view.View,int) -> a
com.aragaer.jtt.today.HourItem -> com.aragaer.jtt.c.b:
    int hnum -> c
    java.lang.String[] extras -> a
    android.view.View toView(android.content.Context,android.view.View,int) -> a
com.aragaer.jtt.today.TodayAdapter -> com.aragaer.jtt.c.c:
    long[] transitions -> a
    int selected -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void tick(long[],boolean) -> a
    boolean isEnabled(int) -> isEnabled
    void onStringResourcesChanged$13462e() -> b_
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
com.aragaer.jtt.today.TodayItem -> com.aragaer.jtt.c.d:
    long time -> b
    android.view.View toView(android.content.Context,android.view.View,int) -> a
com.aragaer.jtt.wadokei.AutoresizeTextView -> com.aragaer.jtt.d.a:
    void onMeasure(int,int) -> onMeasure
com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator -> com.a.a.a:
    com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator calculator -> a
com.luckycatlabs.sunrisesunset.Zenith -> com.a.a.b:
    com.luckycatlabs.sunrisesunset.Zenith OFFICIAL -> a
    java.math.BigDecimal degrees -> b
    java.math.BigDecimal degrees() -> a
com.luckycatlabs.sunrisesunset.calculator.SolarEventCalculator -> com.a.a.a.a:
    com.luckycatlabs.sunrisesunset.dto.Location location -> a
    java.util.TimeZone timeZone -> b
    java.math.BigDecimal computeSolarEventTime(com.luckycatlabs.sunrisesunset.Zenith,java.util.Calendar,boolean) -> a
    java.math.BigDecimal getBaseLongitudeHour() -> a
    long getLocalTimeInMillis(java.math.BigDecimal,java.util.Calendar) -> a
    java.math.BigDecimal convertRadiansToDegrees(java.math.BigDecimal) -> a
    java.math.BigDecimal convertDegreesToRadians(java.math.BigDecimal) -> b
    java.math.BigDecimal multiplyBy(java.math.BigDecimal,java.math.BigDecimal) -> a
    java.math.BigDecimal divideBy(java.math.BigDecimal,java.math.BigDecimal) -> b
    java.math.BigDecimal setScale(java.math.BigDecimal) -> c
com.luckycatlabs.sunrisesunset.dto.Location -> com.a.a.b.a:
    java.math.BigDecimal latitude -> a
    java.math.BigDecimal longitude -> b
